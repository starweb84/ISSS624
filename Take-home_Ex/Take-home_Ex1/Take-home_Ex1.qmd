---
title: "Take-home Exercise 1: Geospatial Analytics for Public Good"
date: "2 December 2023"
date-modified: "last-modified"
format: html
execute:
  echo: true
  eval: true
  warning: false
editor: visual
---

## **1. Overview**

The digitization of urban infrastructures, such as buses and public utilities, generates datasets that, when analyzed through technologies like GPS, reveal valuable patterns in human movement. This information enhances urban management and aids both private and public transport providers in making informed decisions for a competitive edge in the evolving urban landscape.

## 1.1 Objectives

In this exercise, the focus will be to identify, analyse and compare the spatial patterns, through using of Geovisualisation and Analysis, and Local Indicators of Spatial Association (LISA) to uncover the spatial and spatio-temporal mobility patterns of public bus passengers in Singapore.

The specific tasks of this exercise are as follows:

### **Geovisualisation and Analysis**

-   With reference to the time intervals provided in the table below, compute the passenger trips generated by origin at the hexagon level,

    | Peak hour period             | Bus tap on time |
    |------------------------------|-----------------|
    | Weekday morning peak         | 6am to 9am      |
    | Weekday afternoon peak       | 5pm to 8pm      |
    | Weekend/holiday morning peak | 11am to 2pm     |
    | Weekend/holiday evening peak | 4pm to 7pm      |

-   Display the geographical distribution of the passenger trips by using appropriate geovisualisation methods,

-   Describe the spatial patterns revealed by the geovisualisation (not more than 200 words per visual).

### **Local Indicators of Spatial Association (LISA) Analysis**

-   Compute LISA of the passengers trips generate by origin at hexagon level.

-   Display the LISA maps of the passengers trips generate by origin at hexagon level. The maps should only display the significant (i.e.Â p-value \< 0.05)

-   With reference to the analysis results, draw statistical conclusions (not more than 200 words per visual).

## **3. Installing and Loading the R Packages**

Below are the packages we will be using for this exercise.

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse, knitr)
```

## **4. Data**

### **4.1 Apastial data**

For the purpose of this take-home exercise, *Passenger Volume by Origin Destination Bus Stops* downloaded from [LTA DataMall](https://datamall.lta.gov.sg/content/datamall/en.html) will be used.

### **4.2 Geospatial data**

Two geospatial data will be used in this study, they are:

-   *Bus Stop Location* from LTA DataMall. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates.

-   *hexagon*, a [hexagon](https://desktop.arcgis.com/en/arcmap/latest/tools/spatial-statistics-toolbox/h-whyhexagons.htm) layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.) should be used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA.

4.1 Importing the aspatial data

We will import that *Passenger Volume By Origin Destination Bus Stops* data set downloaded from LTA Datamall by using read_csv() of readr package. For this exercise, we will observe this dataset for the time period of Oct 2023.

```{r}
odbus <- read_csv("data/aspatial/origin_destination_bus_202310.csv")
```

```{r}
glimpse(odbus)
```

```{r}
origin6_9 <- odbus %>%
  filter (DAY_TYPE == "WEEKDAY") %>%
  filter (TIME_PER_HOUR >= 6 & TIME_PER_HOUR <=9) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

origin5_8 <- odbus %>%
  filter (DAY_TYPE == "WEEKDAY") %>%
  filter (TIME_PER_HOUR >= 5 & TIME_PER_HOUR <=8) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

origin11_14 <- odbus %>%
  filter (DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter (TIME_PER_HOUR >= 11 & TIME_PER_HOUR <=14) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

origin16_19 <- odbus %>%
  filter (DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter (TIME_PER_HOUR >= 16 & TIME_PER_HOUR <=19) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

```

We will save the output in rds format for future used.

```{r}
write_rds(origin6_9, "data/rds/origin6_9.rds")
write_rds(origin5_8, "data/rds/origin5_8.rds")
write_rds(origin11_14, "data/rds/origin11_14.rds")
write_rds(origin16_19, "data/rds/origin16_19.rds")

```

```{r}
busstop <- st_read(dsn = "data/geospatial", layer = "BusStop") %>%
  st_transform(crs = 3414)

st_crs(busstop)
```

```{r}
write_rds(busstop, "data/rds/busstop.csv")  
```

Using origin6_9 as test

```{r}
origin_data <- left_join(origin6_9 , busstop,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE)
```

```{r}
duplicate <- origin_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()

origin_data <- unique(origin_data)
```

```{r}

area_honeycomb_grid = st_make_grid(busstop, c(250, 250), what = "polygons", square = FALSE)

# To sf and add grid ID
honeycomb_grid_sf = st_sf(area_honeycomb_grid) %>%
  # add grid ID
  mutate(grid_id = 1:length(lengths(area_honeycomb_grid)))

# count number of points in each grid
# https://gis.stackexchange.com/questions/323698/counting-points-in-polygons-with-sf-package-of-r
honeycomb_grid_sf$BUS_STOP_N = lengths(st_intersects(honeycomb_grid_sf, busstop))

# remove grid without value of 0 (i.e. no points in side that grid)
honeycomb_count = filter(honeycomb_grid_sf, BUS_STOP_N > 0)

```

```{r}
tmap_mode("view")

map_honeycomb = tm_shape(honeycomb_count) +
  tm_fill(
    col = "BUS_STOP_N",
    palette = "Reds",
    style = "cont",
    title = "Number of bus stops",
    id = "grid_id",
    showNA = FALSE,
    alpha = 0.6,
    popup.vars = c(
      "Number of bus stops: " = "BUS_STOP_N"
    ),
    popup.format = list(
      BUS_STOP_N = list(format = "f", digits = 0)
    )
  ) +
  tm_borders(col = "grey40", lwd = 0.7)

map_honeycomb
```
